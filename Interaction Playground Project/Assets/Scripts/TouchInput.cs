//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/TouchInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TouchInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TouchInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchInput"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""208300bc-7d1a-4980-bc92-0ebab802ffde"",
            ""actions"": [
                {
                    ""name"": ""FingerOne"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7b17ebe8-4e0a-44fe-af5e-4a94c299fce0"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FingerTwo"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b93825d2-23f0-4fc9-acb8-6d80b55c0192"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FingerThree"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1ac17e75-1fd2-4775-84c1-48fe0e4bbc73"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FingerFour"",
                    ""type"": ""PassThrough"",
                    ""id"": ""203dd43d-de7a-4a99-a6e4-862b27e9b0e5"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b7dec268-1afd-4d40-a31d-82c32918b8f8"",
                    ""path"": ""<Touchscreen>/touch0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FingerOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecefc422-abbd-4e95-be10-9393905faa4b"",
                    ""path"": ""<Touchscreen>/touch1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FingerTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa79b222-a87c-4dda-8b85-df87633241ba"",
                    ""path"": ""<Touchscreen>/touch2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FingerThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17dacf16-6c3d-4d40-af4b-8f13360a1e3b"",
                    ""path"": ""<Touchscreen>/touch3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FingerFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_FingerOne = m_Touch.FindAction("FingerOne", throwIfNotFound: true);
        m_Touch_FingerTwo = m_Touch.FindAction("FingerTwo", throwIfNotFound: true);
        m_Touch_FingerThree = m_Touch.FindAction("FingerThree", throwIfNotFound: true);
        m_Touch_FingerFour = m_Touch.FindAction("FingerFour", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Touch
    private readonly InputActionMap m_Touch;
    private ITouchActions m_TouchActionsCallbackInterface;
    private readonly InputAction m_Touch_FingerOne;
    private readonly InputAction m_Touch_FingerTwo;
    private readonly InputAction m_Touch_FingerThree;
    private readonly InputAction m_Touch_FingerFour;
    public struct TouchActions
    {
        private @TouchInput m_Wrapper;
        public TouchActions(@TouchInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @FingerOne => m_Wrapper.m_Touch_FingerOne;
        public InputAction @FingerTwo => m_Wrapper.m_Touch_FingerTwo;
        public InputAction @FingerThree => m_Wrapper.m_Touch_FingerThree;
        public InputAction @FingerFour => m_Wrapper.m_Touch_FingerFour;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void SetCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterface != null)
            {
                @FingerOne.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerOne;
                @FingerOne.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerOne;
                @FingerOne.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerOne;
                @FingerTwo.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerTwo;
                @FingerTwo.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerTwo;
                @FingerTwo.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerTwo;
                @FingerThree.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerThree;
                @FingerThree.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerThree;
                @FingerThree.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerThree;
                @FingerFour.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerFour;
                @FingerFour.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerFour;
                @FingerFour.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnFingerFour;
            }
            m_Wrapper.m_TouchActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FingerOne.started += instance.OnFingerOne;
                @FingerOne.performed += instance.OnFingerOne;
                @FingerOne.canceled += instance.OnFingerOne;
                @FingerTwo.started += instance.OnFingerTwo;
                @FingerTwo.performed += instance.OnFingerTwo;
                @FingerTwo.canceled += instance.OnFingerTwo;
                @FingerThree.started += instance.OnFingerThree;
                @FingerThree.performed += instance.OnFingerThree;
                @FingerThree.canceled += instance.OnFingerThree;
                @FingerFour.started += instance.OnFingerFour;
                @FingerFour.performed += instance.OnFingerFour;
                @FingerFour.canceled += instance.OnFingerFour;
            }
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    public interface ITouchActions
    {
        void OnFingerOne(InputAction.CallbackContext context);
        void OnFingerTwo(InputAction.CallbackContext context);
        void OnFingerThree(InputAction.CallbackContext context);
        void OnFingerFour(InputAction.CallbackContext context);
    }
}
